{"ast":null,"code":"// This is a mock implementation for demonstration\n// In a real app, these would make API calls to your backend\n\nconst STORAGE_KEY = 'resume_builder_user';\n\n// Simulate API delay\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nexport const loginUser = async (email, password) => {\n  await delay(1000); // Simulate network request\n\n  // For demo purposes, accept any email/password combination\n  // In a real app, this would validate against a backend\n  if (email && password) {\n    const userData = {\n      id: 1,\n      name: email.split('@')[0],\n      email\n    };\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(userData));\n    return userData;\n  }\n  throw new Error('Invalid email or password');\n};\nexport const registerUser = async userData => {\n  await delay(1000); // Simulate network request\n\n  // In a real app, this would be an API call to your backend\n  const newUser = {\n    id: Date.now(),\n    ...userData\n  };\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(newUser));\n  return newUser;\n};\nexport const logoutUser = async () => {\n  await delay(500); // Simulate network request\n  localStorage.removeItem(STORAGE_KEY);\n  return true;\n};\nexport const getCurrentUser = async () => {\n  const userData = localStorage.getItem(STORAGE_KEY);\n  return userData ? JSON.parse(userData) : null;\n};","map":{"version":3,"names":["STORAGE_KEY","delay","ms","Promise","resolve","setTimeout","loginUser","email","password","userData","id","name","split","localStorage","setItem","JSON","stringify","Error","registerUser","newUser","Date","now","logoutUser","removeItem","getCurrentUser","getItem","parse"],"sources":["E:/demo/src/services/authService.js"],"sourcesContent":["// This is a mock implementation for demonstration\r\n// In a real app, these would make API calls to your backend\r\n\r\nconst STORAGE_KEY = 'resume_builder_user';\r\n\r\n// Simulate API delay\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport const loginUser = async (email, password) => {\r\n  await delay(1000); // Simulate network request\r\n  \r\n  // For demo purposes, accept any email/password combination\r\n  // In a real app, this would validate against a backend\r\n  if (email && password) {\r\n    const userData = { \r\n      id: 1, \r\n      name: email.split('@')[0], \r\n      email \r\n    };\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(userData));\r\n    return userData;\r\n  }\r\n  \r\n  throw new Error('Invalid email or password');\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  await delay(1000); // Simulate network request\r\n  \r\n  // In a real app, this would be an API call to your backend\r\n  const newUser = { id: Date.now(), ...userData };\r\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(newUser));\r\n  return newUser;\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  await delay(500); // Simulate network request\r\n  localStorage.removeItem(STORAGE_KEY);\r\n  return true;\r\n};\r\n\r\nexport const getCurrentUser = async () => {\r\n  const userData = localStorage.getItem(STORAGE_KEY);\r\n  return userData ? JSON.parse(userData) : null;\r\n}; "],"mappings":"AAAA;AACA;;AAEA,MAAMA,WAAW,GAAG,qBAAqB;;AAEzC;AACA,MAAMC,KAAK,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AAErE,OAAO,MAAMI,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMP,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEnB;EACA;EACA,IAAIM,KAAK,IAAIC,QAAQ,EAAE;IACrB,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAEJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzBL;IACF,CAAC;IACDM,YAAY,CAACC,OAAO,CAACd,WAAW,EAAEe,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,CAAC;IAC3D,OAAOA,QAAQ;EACjB;EAEA,MAAM,IAAIQ,KAAK,CAAC,2BAA2B,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOT,QAAQ,IAAK;EAC9C,MAAMR,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEnB;EACA,MAAMkB,OAAO,GAAG;IAAET,EAAE,EAAEU,IAAI,CAACC,GAAG,CAAC,CAAC;IAAE,GAAGZ;EAAS,CAAC;EAC/CI,YAAY,CAACC,OAAO,CAACd,WAAW,EAAEe,IAAI,CAACC,SAAS,CAACG,OAAO,CAAC,CAAC;EAC1D,OAAOA,OAAO;AAChB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMrB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAClBY,YAAY,CAACU,UAAU,CAACvB,WAAW,CAAC;EACpC,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMwB,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMf,QAAQ,GAAGI,YAAY,CAACY,OAAO,CAACzB,WAAW,CAAC;EAClD,OAAOS,QAAQ,GAAGM,IAAI,CAACW,KAAK,CAACjB,QAAQ,CAAC,GAAG,IAAI;AAC/C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}