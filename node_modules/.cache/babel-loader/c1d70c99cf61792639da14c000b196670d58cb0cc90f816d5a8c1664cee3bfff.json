{"ast":null,"code":"var _jsxFileName = \"E:\\\\demo\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { loginUser, registerUser, logoutUser, getCurrentUser } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on page load\n    const checkAuthStatus = async () => {\n      try {\n        const userData = await getCurrentUser();\n        if (userData) {\n          setCurrentUser(userData);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Authentication check failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const userData = await loginUser(email, password);\n      setCurrentUser(userData);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      const newUser = await registerUser(userData);\n      setCurrentUser(newUser);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await logoutUser();\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"fSs8I3rmRpj0Th9Mm1M79E+wcpY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","loginUser","registerUser","logoutUser","getCurrentUser","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuthStatus","userData","error","console","login","email","password","success","message","signup","newUser","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/demo/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { loginUser, registerUser, logoutUser, getCurrentUser } from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on page load\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        const userData = await getCurrentUser();\r\n        if (userData) {\r\n          setCurrentUser(userData);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Authentication check failed:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const userData = await loginUser(email, password);\r\n      setCurrentUser(userData);\r\n      setIsAuthenticated(true);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      const newUser = await registerUser(userData);\r\n      setCurrentUser(newUser);\r\n      setIsAuthenticated(true);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await logoutUser();\r\n      setCurrentUser(null);\r\n      setIsAuthenticated(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}